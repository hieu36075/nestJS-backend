// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generator client{
//   provider = "prisma-client-js"
// }

model Post {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  hashedPassword String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  role          Role      @relation(fields: [roleId], references: [id])
  roleId        String    
  posts         Post[]
  profile       Profile?
  @@map(name: "users")
}

model Role{
  id            String       @default(cuid()) @id
  name          String
  user          User[]
}

model Profile {
  id            String       @default(cuid()) @id
  user          User         @relation(fields: [userId], references: [id])
  userId        String       @unique
  fullName      String
  address       String?
  phone         String?
  avatarUrl     String?
}

model Category{
  id            String       @default(cuid()) @id
  name          String
  room          Room[]
}

model Hotel {
  id            String       @default(cuid()) @id
  name          String
  address       String
  room          Room[]
}
model Room{
  id            String       @default(cuid()) @id
  name          String  
  description   String
  price         Int
  isAvaiable    Boolean 
  category      Category     @relation(fields: [idCategory], references: [id])
  idCategory    String
  hotel         Hotel        @relation(fields: [hotelId], references: [id])
  hotelId     String
  imageRoom     ImageRoom[]

}

model ImageRoom{
  id            String       @default(cuid()) @id
  imageUrl      String?
  room          Room         @relation(fields: [idRoom], references: [id])
  idRoom        String
}



